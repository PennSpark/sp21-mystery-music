[{"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\index.js":"1","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\App.js":"3","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Game.js":"4","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Board.js":"5","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Square.js":"6"},{"size":517,"mtime":1619917787307,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1619917787307,"results":"9","hashOfConfig":"8"},{"size":11246,"mtime":1619919662529,"results":"10","hashOfConfig":"8"},{"size":9887,"mtime":1619917787306,"results":"11","hashOfConfig":"8"},{"size":837,"mtime":1619917787306,"results":"12","hashOfConfig":"8"},{"size":175,"mtime":1619917787306,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1umcab",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\index.js",[],["28","29"],"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\App.js",["30","31","32","33","34"],"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Game.js",["35","36","37","38","39","40","41"],"import React from 'react';\r\nimport Board from './Board';\r\nimport Swal from \"sweetalert2\";  \r\nimport './Game.css';\r\nimport axios from 'axios';\r\n\r\nconst option_letters = ['A', 'B', 'C', 'D'];\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setState({\r\n      countdown: 10,\r\n    });\r\n\r\n    this.player = this.props.player;\r\n    this.roomId = this.props.roomId;\r\n    this.databaseGameId = this.props.databaseGameId;\r\n    this.round = 0;\r\n    this.score = 0;\r\n    this.gameOver = false;\r\n    this.counter = 0;\r\n    this.answer = 0;\r\n\r\n    this.state = {\r\n      //placeholder\r\n      squares: [], \r\n      size : 0\r\n    };\r\n\r\n    console.log(\"size: \" + this.state.size);\r\n    console.log(\"player: \" + this.player);\r\n  }\r\n\r\n  // function for each new round\r\n  newRound = () => {\r\n    var squares = this.state.squares;\r\n\r\n    squares = Array(this.state.size).fill(\"temp\");\r\n    this.round += 1;\r\n    this.answer = this.round;\r\n\r\n    this.setState({\r\n      // update squares\r\n      squares: squares\r\n    });\r\n\r\n    // update scoreboard\r\n    // update current song\r\n  }\r\n\r\n  timer = () => {\r\n    var timeleft = 10;\r\n    var timer = setInterval(() => {\r\n      if (timeleft <= 0){\r\n        clearInterval(timer);\r\n        //document.getElementById(\"countdown\").innerHTML = \"Finished\";\r\n        this.round += 1;\r\n        var x = this.round;\r\n        //document.getElementById(\"status\").innerHTML = 'Round:' + x;\r\n        //this.newRound();\r\n      } else {\r\n        //document.getElementById(\"countdown\").innerHTML = timeleft + \" seconds remaining\";\r\n      }\r\n      timeleft -= 1;\r\n    }, 1000);\r\n  }\r\n\r\n  fillArray(size) {\r\n    var array = Array(size).fill();\r\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId)\r\n    .then(response => {\r\n      for (var i = 0; i < response.data.players.length; i++){\r\n        array[i] = response.data.players[i].playerName;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    return array;\r\n  }\r\n\r\n  \r\n\r\n  nextTurn(n) {\r\n    axios.get('http://localhost:5001/games/getRandomPair/' + this.databaseGameId)\r\n    .then(response => {\r\n      //player id of song\r\n      this.answer = response.data[0].playerId;\r\n      //player name of song if needed\r\n      console.log(response.data[0].playerName);\r\n      //name of song if needed\r\n      console.log(response.data[0].songName);\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer();\r\n    //gets size(num of players in game) and updates squares\r\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId)\r\n    .then(response => {\r\n      console.log(\"hi there\");\r\n      console.log(response);\r\n        this.setState({\r\n          size : response.data.size,\r\n          squares: this.fillArray(response.data.size)\r\n        });\r\n     \r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\r\n\r\n      // edit publish move to publish scoreboard instead?\r\n      // Publish move to the opponent's board    \r\n      this.publishMove(msg.message.index, msg.message.piece);\r\n\r\n      // Start a new game\r\n      if(msg.message.reset){\r\n        this.setState({\r\n          // update players\r\n          squares: this.fillArray(8)\r\n        });\r\n\r\n        this.round = 0;\r\n        this.score = 0;\r\n        this.gameOver = false;\r\n        this.counter = 0;\r\n        this.answer = 0;\r\n        Swal.close()\r\n      }\r\n\r\n      // End the game and go back to the lobby\r\n      else if(msg.message.endGame){\r\n        Swal.close();\r\n        this.props.endGame();\r\n      }\r\n    });\r\n  }\r\n\r\n\t// Update score if answer is correct\r\n  updateScore = (winner) => {\r\n    // if selected index = correct index\r\n\r\n    const updateScoreThing = {\r\n      joinCode: this.roomId,\r\n      playerId: winner,\r\n      score: this.score\r\n    };\r\n    axios.post('http://localhost:5001/games/updateScore', updateScoreThing)\r\n      .then(res => console.log(res.data));\r\n      \r\n\r\n\t\t// End the game once there is a winner\r\n\t\t// this.gameOver = true;\r\n\t\t// this.newRound(winner);\t\r\n  }\r\n  \r\n  checkForWinner = () => {\r\n\r\n    // All rounds have been completed\r\n    if (this.round === 4) {\r\n      this.gameOver = true;\r\n      if(this.props.isRoomCreator) {\r\n        Swal.fire({      \r\n              position: 'top',\r\n              allowOutsideClick: false,\r\n              title: 'Game Over',\r\n              text: 'Ready for next round?',\r\n              showCancelButton: true,\r\n              confirmButtonColor: 'rgb(208,33,41)',\r\n              cancelButtonColor: '#aaa',\r\n              cancelButtonText: 'Nope',\r\n              confirmButtonText: 'Yea!',\r\n              width: 275,\r\n            }).then((result) => {\r\n              // Start a new round\r\n              if (result.value) {\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    reset: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n      \r\n              else{\r\n                // End the game\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    endGame: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n            })      \r\n          \r\n      } else {\r\n      Swal.fire({  \r\n            position: 'top',\r\n            allowOutsideClick: false,\r\n            title: 'Game Over',\r\n            text: 'Waiting for a new round...',\r\n            confirmButtonColor: 'rgb(208,33,41)',\r\n            width: 275\r\n          });\r\n        }\r\n    }\r\n  };\r\n   \r\n  // Publishing an opponent's move onto the board\r\n  // not even necessary ):\r\n  publishMove = (index, piece) => {\r\n    var squares = this.state.squares;\r\n\r\n    squares[index] = piece;\r\n\r\n    this.setState({\r\n      // update scores\r\n      squares: squares,\r\n    });\r\n    \r\n    if (index === this.answer) {\r\n      this.scores[index] += 1;\r\n    }\r\n\r\n    this.checkForWinner()\r\n  }\r\n\r\n  // Making a move on the board and publishing it\r\n  onMakeMove = (index) => {\r\n    var squares = this.state.squares;\r\n\r\n    // Update chosen button to show that it's been clicked\r\n    console.log(index);\r\n\r\n    if (index == this.answer) { \r\n      console.log(\"correct!\");\r\n      squares[index] = 'X';\r\n\r\n      this.score += 1;\r\n\r\n       this.setState({\r\n         squares: squares,\r\n       });\r\n\r\n      // Publish move to the channel\r\n      // this.props.pubnub.publish({\r\n      //   message: {\r\n      //     index: index,\r\n      //     piece: 'X',\r\n      //   },\r\n      //   channel: this.props.gameChannel\r\n      // });  \r\n\r\n      // Check if there is a winner\r\n      this.checkForWinner();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let status;\r\n    // Change to current round\r\n    status = `${this.round}`;\r\n    return (\r\n      \r\n      <div className=\"game\">\r\n         {/* You are player {this.player}\r\n        <div className=\"prompt\">\r\n          Guess who! {this.answer}\r\n        </div>\r\n        <br></br> */}\r\n        \r\n        {/* <div className=\"scores-container\">\r\n          <div>\r\n            SCORES {this.scores}\r\n          </div>\r\n        </div>   \r\n      </div> */}\r\n      \r\n      <div class=\"container-center-horizontal\">\r\n      <div class=\"game-screen-1 screen\">\r\n        <div class=\"flex-row-5\">\r\n          <img\r\n            class=\"mystery-music-logo3-1\"\r\n            src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/608797e5c0ff3678276ff026/img/mysterymusic-logo3-1@2x.png\"\r\n          />\r\n          <div class=\"overlap-group\">\r\n            <h1 class=\"text-1\">Guess Whose Playlist?</h1>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-row-4\">\r\n          <div class=\"overlap-group1\">\r\n            <img\r\n              class=\"vector-197\"\r\n              src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/vector-197@2x.svg\"\r\n            />\r\n          </div>\r\n          <div class=\"flex-col\">\r\n            <div class=\"album-cover\"></div>\r\n            <div class=\"play-bar\">\r\n              <div class=\"overlap-group3-1\">\r\n                <div class=\"rectangle\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"overlap-group2\">\r\n            <div class=\"leaderboard-example\">\r\n              <div class=\"overlap-group3\">\r\n                <div class=\"name-1 karla-normal-black-24px\">Linda</div>\r\n                <img\r\n                  class=\"star-1\"\r\n                  src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/star-1@2x.svg\"\r\n                />\r\n                <div class=\"number-1 karla-bold-black-24px\">6</div>\r\n              </div>\r\n              <div class=\"flex-row\">\r\n                <div class=\"name-2 karla-normal-black-24px\">Lindsay</div>\r\n                <div class=\"number-2 karla-bold-black-24px\">5</div>\r\n              </div>\r\n              <div class=\"flex-row-1\">\r\n                <div class=\"egret karla-normal-black-24px\">Egret</div>\r\n                <div class=\"number karla-bold-black-24px\">3</div>\r\n              </div>\r\n              <div class=\"flex-row-2\">\r\n                <div class=\"name karla-normal-black-24px\">David</div>\r\n                <div class=\"number-3 karla-bold-black-24px\">1</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"board\">\r\n          <Board\r\n              squares={this.state.squares}\r\n              size={this.props.size}\r\n              onClick={index => this.onMakeMove(index)}\r\n            />   \r\n            <div id=\"countdown\"></div>      \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n \r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Board.js",[],"C:\\Users\\david\\mystery-music4\\sp21-mystery-music\\my-app\\src\\Square.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":152,"column":45,"nodeType":"52","messageId":"53","endLine":152,"endColumn":47},{"ruleId":"50","severity":1,"message":"51","line":245,"column":47,"nodeType":"52","messageId":"53","endLine":245,"endColumn":49},{"ruleId":"54","severity":1,"message":"55","line":331,"column":12,"nodeType":"56","endLine":334,"endColumn":14},{"ruleId":"54","severity":1,"message":"55","line":335,"column":12,"nodeType":"56","endLine":338,"endColumn":14},{"ruleId":"46","severity":1,"message":"57","line":7,"column":7,"nodeType":"48","messageId":"49","endLine":7,"endColumn":21},{"ruleId":"46","severity":1,"message":"58","line":61,"column":13,"nodeType":"48","messageId":"49","endLine":61,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":246,"column":15,"nodeType":"52","messageId":"53","endLine":246,"endColumn":17},{"ruleId":"46","severity":1,"message":"59","line":274,"column":5,"nodeType":"48","messageId":"49","endLine":274,"endColumn":11},{"ruleId":"54","severity":1,"message":"55","line":294,"column":11,"nodeType":"56","endLine":297,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":304,"column":13,"nodeType":"56","endLine":307,"endColumn":15},{"ruleId":"54","severity":1,"message":"55","line":321,"column":17,"nodeType":"56","endLine":324,"endColumn":19},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'game' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'option_letters' is assigned a value but never used.","'x' is assigned a value but never used.","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]