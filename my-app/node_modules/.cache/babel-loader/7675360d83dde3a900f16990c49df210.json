{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egg\\\\Desktop\\\\UPenn\\\\sem 4\\\\pcl\\\\mystery music\\\\my-app\\\\src\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport { View, Text, ActivityIndicator, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\"; // import Icon from \"react-native-vector-icons/FontAwesome\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst option_letters = ['A', 'B', 'C', 'D'];\nconst base_url = \"YOUR NGROK HTTPS URL\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_question: false,\n      countdown: 10,\n      show_result: false,\n      selected_option: null,\n      disable_options: true,\n      total_score: 0,\n      index: 1,\n      display_top_users: false\n    };\n\n    this.renderTopUsers = () => {\n      const {\n        top_users\n      } = this.state;\n      return top_users.map(({\n        username,\n        score\n      }) => {\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.sub_text,\n            children: [username, \": \", score, \" out of 10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)\n        }, username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderOptions = (options, answer) => {\n      const {\n        show_result,\n        selected_option,\n        disable_options\n      } = this.state;\n      return options.map((opt, index) => {\n        const letter = option_letters[index];\n        const is_selected = selected_option == letter;\n        const is_answer = letter == answer ? true : false;\n        return /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          disabled: disable_options,\n          onPress: () => this.placeAnswer(index, answer),\n          children: /*#__PURE__*/_jsxDEV(View, {\n            style: styles.option,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              style: styles.option_text,\n              children: opt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), is_answer && show_result && is_selected && /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"check\",\n              size: 25,\n              color: \"#28a745\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 58\n            }, this), !is_answer && show_result && is_selected && /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"times\",\n              size: 25,\n              color: \"#d73a49\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.placeAnswer = (index, answer) => {\n      const selected_option = option_letters[index];\n      const {\n        countdown,\n        total_score\n      } = this.state;\n\n      if (countdown > 0) {\n        if (selected_option == answer) {\n          this.setState(prevState => {\n            return {\n              total_score: prevState.total_score + 1\n            };\n          });\n          axios.post(base_url + '/increment-score', {\n            username: this.myUsername\n          }).then(() => {\n            console.log('incremented score');\n          }).catch(err => {\n            console.log('error occurred: ', e);\n          });\n        }\n      }\n\n      this.setState({\n        show_result: true,\n        disable_options: true,\n        selected_option\n      });\n    };\n\n    const {\n      navigation\n    } = this.props;\n    this.pusher = navigation.getParam('pusher');\n    this.myUsername = navigation.getParam('myUsername');\n    this.quizChannel = navigation.getParam('quizChannel');\n    this.quizChannel.bind('question-given', ({\n      index,\n      question,\n      optionA,\n      optionB,\n      optionC,\n      optionD,\n      answer\n    }) => {\n      this.setState({\n        display_question: true,\n        countdown: 10,\n        show_result: false,\n        disable_options: false,\n        selected_option: null,\n        index,\n        question,\n        optionA,\n        optionB,\n        optionC,\n        optionD,\n        answer\n      });\n      const interval = setInterval(() => {\n        this.setState(prevState => {\n          const cnt = prevState.countdown > 0 ? prevState.countdown - 1 : 0;\n\n          if (cnt == 0) {\n            clearInterval(interval);\n          }\n\n          return {\n            countdown: cnt\n          };\n        });\n      }, 1000);\n    });\n    this.quizChannel.bind('top-users', ({\n      users\n    }) => {\n      console.log('received top users: ', JSON.stringify(users));\n      this.setState({\n        top_users: users,\n        display_top_users: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      total_score,\n      countdown,\n      index,\n      question,\n      optionA,\n      optionB,\n      optionC,\n      optionD,\n      answer,\n      display_question,\n      top_users,\n      display_top_users\n    } = this.state;\n    const options = [optionA, optionB, optionC, optionD];\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Total Score: \", total_score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.countdown,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.countdown_text,\n          children: countdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), !display_question && /*#__PURE__*/_jsxDEV(View, {\n        style: styles.centered,\n        children: /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), display_question && !display_top_users && /*#__PURE__*/_jsxDEV(View, {\n        style: styles.quiz,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(View, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: styles.big_text,\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            style: styles.list_container,\n            children: this.renderOptions(options, answer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), display_top_users && /*#__PURE__*/_jsxDEV(View, {\n        style: styles.top_users,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.big_text,\n          children: \"Top Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: styles.list_container,\n          children: this.renderTopUsers()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nQuiz.navigationOptions = {\n  header: null\n};\nexport default Quiz;\nconst styles = {\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  countdown: {\n    alignItems: 'flex-end',\n    padding: 20\n  },\n  countdown_text: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  quiz: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  big_text: {\n    fontWeight: 'bold',\n    fontSize: 25\n  },\n  sub_text: {\n    fontSize: 18\n  },\n  list_container: {\n    marginTop: 30\n  },\n  option: {\n    padding: 25,\n    flexDirection: 'row'\n  },\n  option_text: {\n    fontSize: 20,\n    marginRight: 10\n  },\n  top_users: {\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["C:/Users/egg/Desktop/UPenn/sem 4/pcl/mystery music/my-app/src/Quiz.js"],"names":["React","Component","View","Text","ActivityIndicator","TouchableOpacity","axios","option_letters","base_url","Quiz","constructor","props","state","display_question","countdown","show_result","selected_option","disable_options","total_score","index","display_top_users","renderTopUsers","top_users","map","username","score","styles","sub_text","renderOptions","options","answer","opt","letter","is_selected","is_answer","placeAnswer","option","option_text","setState","prevState","post","myUsername","then","console","log","catch","err","e","navigation","pusher","getParam","quizChannel","bind","question","optionA","optionB","optionC","optionD","interval","setInterval","cnt","clearInterval","users","JSON","stringify","render","container","countdown_text","centered","quiz","big_text","list_container","navigationOptions","header","flex","padding","alignItems","fontSize","fontWeight","justifyContent","marginTop","flexDirection","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, ActivityIndicator, TouchableOpacity } from \"react-native\";\r\nimport axios from \"axios\";\r\n// import Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nconst option_letters = ['A', 'B', 'C', 'D'];\r\nconst base_url = \"YOUR NGROK HTTPS URL\";\r\n\r\nclass Quiz extends Component {\r\n  \r\n  static navigationOptions = {\r\n    header: null\r\n  };\r\n\r\n  state = {\r\n    display_question: false,\r\n    countdown: 10,\r\n    show_result: false,\r\n    selected_option: null,\r\n    disable_options: true,\r\n    total_score: 0,\r\n    \r\n    index: 1, \r\n   \r\n    display_top_users: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { navigation } = this.props;\r\n    \r\n    this.pusher = navigation.getParam('pusher');\r\n    this.myUsername = navigation.getParam('myUsername');\r\n    this.quizChannel = navigation.getParam('quizChannel');\r\n\r\n    this.quizChannel.bind('question-given', ({ index, question, optionA, optionB, optionC, optionD, answer }) => {\r\n      \r\n      this.setState({\r\n        display_question: true,\r\n        countdown: 10,\r\n        show_result: false,\r\n        disable_options: false,\r\n        selected_option: null,\r\n\r\n        index, \r\n        question, \r\n        optionA, \r\n        optionB, \r\n        optionC, \r\n        optionD, \r\n        answer\r\n      });\r\n\r\n      const interval = setInterval(() => {\r\n        this.setState((prevState) => {\r\n          const cnt = (prevState.countdown > 0) ? prevState.countdown - 1 : 0\r\n          if (cnt == 0) {\r\n            clearInterval(interval);\r\n          }\r\n\r\n          return {\r\n            countdown: cnt\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n    });\r\n    \r\n    this.quizChannel.bind('top-users', ({ users }) => {\r\n      console.log('received top users: ', JSON.stringify(users));\r\n      this.setState({\r\n        top_users: users,\r\n        display_top_users: true\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    const { \r\n      total_score,\r\n      countdown, \r\n      index, \r\n      question, \r\n      optionA, \r\n      optionB, \r\n      optionC, \r\n      optionD, \r\n      answer, \r\n\r\n      display_question,\r\n      top_users,\r\n      display_top_users\r\n    } = this.state;\r\n    \r\n    const options = [optionA, optionB, optionC, optionD];\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        \r\n        <View>\r\n          <Text>Total Score: {total_score}</Text>\r\n        </View>\r\n\r\n        <View style={styles.countdown}>\r\n          <Text style={styles.countdown_text}>{countdown}</Text>\r\n        </View>\r\n\r\n        {\r\n          !display_question &&\r\n          <View style={styles.centered}>\r\n            <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n          </View>\r\n        }\r\n\r\n        {\r\n          display_question && !display_top_users && \r\n          <View style={styles.quiz}>  \r\n            <View>\r\n              <View>\r\n                <Text style={styles.big_text}>{question}</Text>\r\n              </View>\r\n\r\n              <View style={styles.list_container}>\r\n                { this.renderOptions(options, answer) }\r\n              </View>\r\n            </View>\r\n          </View>\r\n        }\r\n\r\n        {\r\n          display_top_users &&\r\n          <View style={styles.top_users}>\r\n            <Text style={styles.big_text}>Top Users</Text>\r\n            <View style={styles.list_container}>\r\n            { this.renderTopUsers() }\r\n            </View>\r\n          </View>\r\n        }\r\n            \r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderTopUsers = () => {\r\n    const { top_users } = this.state;\r\n    return top_users.map(({ username, score }) => {\r\n      return (\r\n        <View key={username}>\r\n          <Text style={styles.sub_text}>{username}: {score} out of 10</Text>\r\n        </View>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderOptions = (options, answer) => {\r\n    const { show_result, selected_option, disable_options } = this.state;\r\n\r\n    return options.map((opt, index) => {\r\n      const letter = option_letters[index];\r\n      const is_selected = selected_option == letter;\r\n      const is_answer = (letter == answer) ? true : false; \r\n\r\n      return (\r\n        <TouchableOpacity disabled={disable_options} onPress={() => this.placeAnswer(index, answer)} key={index}>\r\n          <View style={styles.option}>\r\n            <Text style={styles.option_text}>{opt}</Text>\r\n\r\n            {\r\n              is_answer && show_result && is_selected && <Icon name=\"check\" size={25} color=\"#28a745\" />\r\n            }\r\n            \r\n            {\r\n              !is_answer && show_result && is_selected && <Icon name=\"times\" size={25} color=\"#d73a49\" />\r\n            }\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    });\r\n  }\r\n  \r\n\r\n  placeAnswer = (index, answer) => {\r\n    \r\n    const selected_option = option_letters[index];\r\n    const { countdown, total_score } = this.state;\r\n\r\n    if (countdown > 0) {\r\n      if (selected_option == answer) { \r\n        this.setState((prevState) => {\r\n          return {\r\n            total_score: prevState.total_score + 1\r\n          }\r\n        });\r\n    \r\n        axios.post(base_url + '/increment-score', {\r\n          username: this.myUsername\r\n        }).then(() => {\r\n          console.log('incremented score');\r\n        }).catch((err) => {\r\n          console.log('error occurred: ', e);\r\n        });\r\n      } \r\n    }\r\n\r\n    this.setState({\r\n      show_result: true,\r\n      disable_options: true,\r\n      selected_option\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    padding: 10\r\n  },\r\n  countdown: {\r\n    alignItems: 'flex-end',\r\n    padding: 20\r\n  },\r\n  countdown_text: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  quiz: {\r\n    flex: 1,\r\n    justifyContent: 'center'\r\n  },\r\n  big_text: {\r\n    fontWeight: 'bold',\r\n    fontSize: 25\r\n  },\r\n  sub_text: {\r\n    fontSize: 18\r\n  },\r\n  list_container: {\r\n    marginTop: 30\r\n  },\r\n  option: {\r\n    padding: 25,\r\n    flexDirection: 'row'\r\n  },\r\n  option_text: {\r\n    fontSize: 20,\r\n    marginRight: 10\r\n  },\r\n  top_users: {\r\n    alignItems: 'center'\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}