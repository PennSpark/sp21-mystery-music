{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\mystery-music3\\\\sp21-mystery-music\\\\my-app\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Swal from \"sweetalert2\";\nimport './Game.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst option_letters = ['A', 'B', 'C', 'D'];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.newRound = () => {\n      var squares = this.state.squares;\n      squares = Array(this.state.size).fill(\"temp\");\n      this.round += 1;\n      this.answer = this.round;\n      this.setState({\n        // update squares\n        squares: squares\n      }); // update scores\n    };\n\n    this.timer = () => {\n      var timeleft = 10;\n      var timer = setInterval(() => {\n        if (timeleft <= 0) {\n          clearInterval(timer); //document.getElementById(\"countdown\").innerHTML = \"Finished\";\n\n          this.round += 1;\n          var x = this.round; //document.getElementById(\"status\").innerHTML = 'Round:' + x;\n          //this.newRound();\n        } else {//document.getElementById(\"countdown\").innerHTML = timeleft + \" seconds remaining\";\n          }\n\n        timeleft -= 1;\n      }, 1000);\n    };\n\n    this.updateScore = winner => {\n      // if selected index = correct index\n\n      /*im guessing this is filler so commenting it out\r\n      if (true) {\r\n        this.score += 1;\r\n      }\r\n      */\n      const updateScoreThing = {\n        joinCode: this.roomId,\n        playerName: winner,\n        score: 1\n      };\n      axios.post('http://localhost:5001/games/updateScore', updateScoreThing).then(res => console.log(res.data)); // End the game once there is a winner\n      // this.gameOver = true;\n      // this.newRound(winner);\t\n    };\n\n    this.checkForWinner = () => {\n      // All rounds have been completed\n      if (this.round === 4) {\n        this.gameOver = true;\n\n        if (this.props.isRoomCreator) {\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Game Over',\n            text: 'Ready for next round?',\n            showCancelButton: true,\n            confirmButtonColor: 'rgb(208,33,41)',\n            cancelButtonColor: '#aaa',\n            cancelButtonText: 'Nope',\n            confirmButtonText: 'Yea!',\n            width: 275\n          }).then(result => {\n            // Start a new round\n            if (result.value) {\n              this.props.pubnub.publish({\n                message: {\n                  reset: true\n                },\n                channel: this.props.gameChannel\n              });\n            } else {\n              // End the game\n              this.props.pubnub.publish({\n                message: {\n                  endGame: true\n                },\n                channel: this.props.gameChannel\n              });\n            }\n          });\n        } else {\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Game Over',\n            text: 'Waiting for a new round...',\n            confirmButtonColor: 'rgb(208,33,41)',\n            width: 275\n          });\n        }\n      }\n    };\n\n    this.publishMove = (index, piece) => {\n      var squares = this.state.squares;\n      squares[index] = piece;\n      this.setState({\n        // update scores\n        squares: squares\n      });\n\n      if (index === this.answer) {\n        this.scores[index] += 1;\n      }\n\n      this.checkForWinner();\n    };\n\n    this.onMakeMove = index => {\n      var squares = this.state.squares; // Update chosen button to show that it's been clicked\n\n      console.log(index);\n\n      if (index == 3) {\n        console.log(\"correct!\");\n        squares[index] = 'X';\n        this.setState({\n          squares: squares\n        }); // Publish move to the channel\n\n        this.props.pubnub.publish({\n          message: {\n            index: index,\n            piece: 'X'\n          },\n          channel: this.props.gameChannel\n        }); // Check if there is a winner\n\n        this.checkForWinner();\n      }\n    };\n\n    this.setState({\n      countdown: 10\n    });\n    this.player = this.props.player;\n    this.roomId = this.props.roomId;\n    this.round = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.counter = 0;\n    this.answer = 0;\n    this.state = {\n      //placeholder\n      squares: [],\n      size: 0\n    };\n    console.log(\"size: \" + this.state.size);\n    console.log(\"player: \" + this.player);\n  } // function for each new round\n\n\n  fillArray(size) {\n    var array = Array(size).fill();\n    axios.get('http://localhost:5001/games/').then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i].joinCode == this.roomId) {\n          for (var j = 0; j < response.data[i].players.length; j++) {\n            array[j] = response.data[i].players[j];\n          }\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    return array;\n  }\n\n  nextTurn(n) {\n    console.log('idk');\n    axios.get('http://localhost:5001/games/getRandomPair/608b7442645d664c98060a3a').then(response => {\n      console.log(response);\n      console.log('hi');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.nextTurn(1);\n    this.timer(); //gets size(num of players in game) and updates squares\n\n    axios.get('http://localhost:5001/games/').then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i].joinCode == this.roomId) {\n          this.setState({\n            size: response.data[i].size,\n            squares: this.fillArray(response.data[i].size)\n          });\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    this.props.pubnub.getMessage(this.props.gameChannel, msg => {\n      // Publish move to the opponent's board    \n      this.publishMove(msg.message.index, msg.message.piece); // Start a new game\n\n      if (msg.message.reset) {\n        this.setState({\n          // update players\n          squares: this.fillArray(8)\n        });\n        this.round = 0;\n        this.score = 0;\n        this.gameOver = false;\n        this.counter = 0;\n        this.answer = 0;\n        Swal.close();\n      } // End the game and go back to the lobby\n      else if (msg.message.endGame) {\n          Swal.close();\n          this.props.endGame();\n        }\n    });\n  } // Update score if answer is correct\n\n\n  render() {\n    let status; // Change to current round\n\n    status = `${this.round}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-center-horizontal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"game-screen-1 screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex-row-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"mystery-music-logo3-1\",\n              src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/608797e5c0ff3678276ff026/img/mysterymusic-logo3-1@2x.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                class: \"text-1\",\n                children: \"Guess Whose Playlist?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex-row-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group1\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"vector-197\",\n                src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/vector-197@2x.svg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"album-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"play-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"overlap-group3-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"rectangle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"leaderboard-example\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"overlap-group3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name-1 karla-normal-black-24px\",\n                    children: \"Linda\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    class: \"star-1\",\n                    src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/star-1@2x.svg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-1 karla-bold-black-24px\",\n                    children: \"6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name-2 karla-normal-black-24px\",\n                    children: \"Lindsay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-2 karla-bold-black-24px\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"egret karla-normal-black-24px\",\n                    children: \"Egret\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number karla-bold-black-24px\",\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name karla-normal-black-24px\",\n                    children: \"David\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-3 karla-bold-black-24px\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board\",\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              squares: this.state.squares,\n              size: this.props.size,\n              onClick: index => this.onMakeMove(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"countdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/david/mystery-music3/sp21-mystery-music/my-app/src/Game.js"],"names":["React","Board","Swal","axios","option_letters","Game","Component","constructor","props","newRound","squares","state","Array","size","fill","round","answer","setState","timer","timeleft","setInterval","clearInterval","x","updateScore","winner","updateScoreThing","joinCode","roomId","playerName","score","post","then","res","console","log","data","checkForWinner","gameOver","isRoomCreator","fire","position","allowOutsideClick","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","width","result","value","pubnub","publish","message","reset","channel","gameChannel","endGame","publishMove","index","piece","scores","onMakeMove","countdown","player","counter","fillArray","array","get","response","i","length","j","players","catch","error","nextTurn","n","componentDidMount","getMessage","msg","close","render","status"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Swal from \"sweetalert2\";  \r\nimport './Game.css';\r\nimport axios from 'axios';\r\n\r\nconst option_letters = ['A', 'B', 'C', 'D'];\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setState({\r\n      countdown: 10,\r\n    });\r\n\r\n    this.player = this.props.player;\r\n    this.roomId = this.props.roomId;\r\n    this.round = 0;\r\n    this.score = 0;\r\n    this.gameOver = false;\r\n    this.counter = 0;\r\n    this.answer = 0;\r\n\r\n    this.state = {\r\n      //placeholder\r\n      squares: [], \r\n      size : 0\r\n    };\r\n\r\n    console.log(\"size: \" + this.state.size);\r\n    console.log(\"player: \" + this.player);\r\n  }\r\n\r\n  // function for each new round\r\n  newRound = () => {\r\n    var squares = this.state.squares;\r\n\r\n    squares = Array(this.state.size).fill(\"temp\");\r\n    this.round += 1;\r\n    this.answer = this.round;\r\n\r\n    this.setState({\r\n      // update squares\r\n      squares: squares\r\n    });\r\n\r\n    // update scores\r\n  }\r\n\r\n  timer = () => {\r\n    var timeleft = 10;\r\n    var timer = setInterval(() => {\r\n      if (timeleft <= 0){\r\n        clearInterval(timer);\r\n        //document.getElementById(\"countdown\").innerHTML = \"Finished\";\r\n        this.round += 1;\r\n        var x = this.round;\r\n        //document.getElementById(\"status\").innerHTML = 'Round:' + x;\r\n        //this.newRound();\r\n      } else {\r\n        //document.getElementById(\"countdown\").innerHTML = timeleft + \" seconds remaining\";\r\n      }\r\n      timeleft -= 1;\r\n    }, 1000);\r\n  }\r\n\r\n  fillArray(size) {\r\n    var array = Array(size).fill();\r\n    axios.get('http://localhost:5001/games/')\r\n    .then(response => {\r\n      for (var i = 0; i < response.data.length; i++){\r\n        if (response.data[i].joinCode == this.roomId){\r\n          for (var j = 0; j < response.data[i].players.length; j++){\r\n            array[j] = response.data[i].players[j];\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    return array;\r\n  }\r\n\r\n  \r\n\r\n  nextTurn(n) {\r\n    console.log('idk');\r\n    axios.get('http://localhost:5001/games/getRandomPair/608b7442645d664c98060a3a')\r\n    .then(response => {\r\n      console.log(response);\r\n      console.log('hi');\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.nextTurn(1);\r\n    this.timer();\r\n    //gets size(num of players in game) and updates squares\r\n    axios.get('http://localhost:5001/games/')\r\n    .then(response => {\r\n      for (var i = 0; i < response.data.length; i++){\r\n        if (response.data[i].joinCode == this.roomId){\r\n          this.setState({\r\n            size : response.data[i].size,\r\n            squares: this.fillArray(response.data[i].size)\r\n          });\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\r\n\r\n      // Publish move to the opponent's board    \r\n      this.publishMove(msg.message.index, msg.message.piece);\r\n\r\n      // Start a new game\r\n      if(msg.message.reset){\r\n        this.setState({\r\n          // update players\r\n          squares: this.fillArray(8)\r\n        });\r\n\r\n        this.round = 0;\r\n        this.score = 0;\r\n        this.gameOver = false;\r\n        this.counter = 0;\r\n        this.answer = 0;\r\n        Swal.close()\r\n      }\r\n\r\n      // End the game and go back to the lobby\r\n      else if(msg.message.endGame){\r\n        Swal.close();\r\n        this.props.endGame();\r\n      }\r\n    });\r\n  }\r\n\r\n\t// Update score if answer is correct\r\n  updateScore = (winner) => {\r\n    // if selected index = correct index\r\n\r\n    /*im guessing this is filler so commenting it out\r\n    if (true) {\r\n      this.score += 1;\r\n    }\r\n    */\r\n    const updateScoreThing = {\r\n      joinCode: this.roomId,\r\n      playerName: winner,\r\n      score: 1\r\n    };\r\n    axios.post('http://localhost:5001/games/updateScore', updateScoreThing)\r\n      .then(res => console.log(res.data));\r\n      \r\n\r\n\t\t// End the game once there is a winner\r\n\t\t// this.gameOver = true;\r\n\t\t// this.newRound(winner);\t\r\n  }\r\n  \r\n  checkForWinner = () => {\r\n\r\n    // All rounds have been completed\r\n    if (this.round === 4) {\r\n      this.gameOver = true;\r\n      if(this.props.isRoomCreator) {\r\n        Swal.fire({      \r\n              position: 'top',\r\n              allowOutsideClick: false,\r\n              title: 'Game Over',\r\n              text: 'Ready for next round?',\r\n              showCancelButton: true,\r\n              confirmButtonColor: 'rgb(208,33,41)',\r\n              cancelButtonColor: '#aaa',\r\n              cancelButtonText: 'Nope',\r\n              confirmButtonText: 'Yea!',\r\n              width: 275,\r\n            }).then((result) => {\r\n              // Start a new round\r\n              if (result.value) {\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    reset: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n      \r\n              else{\r\n                // End the game\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    endGame: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n            })      \r\n          \r\n      } else {\r\n      Swal.fire({  \r\n            position: 'top',\r\n            allowOutsideClick: false,\r\n            title: 'Game Over',\r\n            text: 'Waiting for a new round...',\r\n            confirmButtonColor: 'rgb(208,33,41)',\r\n            width: 275\r\n          });\r\n        }\r\n    }\r\n  };\r\n   \r\n  // Publishing an opponent's move onto the board\r\n  // not even necessary ):\r\n  publishMove = (index, piece) => {\r\n    var squares = this.state.squares;\r\n\r\n    squares[index] = piece;\r\n\r\n    this.setState({\r\n      // update scores\r\n      squares: squares,\r\n    });\r\n    \r\n    if (index === this.answer) {\r\n      this.scores[index] += 1;\r\n    }\r\n\r\n    this.checkForWinner()\r\n  }\r\n\r\n  // Making a move on the board and publishing it\r\n  onMakeMove = (index) => {\r\n    var squares = this.state.squares;\r\n\r\n    // Update chosen button to show that it's been clicked\r\n    console.log(index);\r\n\r\n    if (index == 3) { \r\n      console.log(\"correct!\");\r\n      squares[index] = 'X';\r\n\r\n       this.setState({\r\n         squares: squares,\r\n       });\r\n\r\n      // Publish move to the channel\r\n      this.props.pubnub.publish({\r\n        message: {\r\n          index: index,\r\n          piece: 'X',\r\n        },\r\n        channel: this.props.gameChannel\r\n      });  \r\n\r\n      // Check if there is a winner\r\n      this.checkForWinner();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let status;\r\n    // Change to current round\r\n    status = `${this.round}`;\r\n    return (\r\n      \r\n      <div className=\"game\">\r\n         {/* You are player {this.player}\r\n        <div className=\"prompt\">\r\n          Guess who! {this.answer}\r\n        </div>\r\n        <br></br> */}\r\n        \r\n        {/* <div className=\"scores-container\">\r\n          <div>\r\n            SCORES {this.scores}\r\n          </div>\r\n        </div>   \r\n      </div> */}\r\n      \r\n      <div class=\"container-center-horizontal\">\r\n      <div class=\"game-screen-1 screen\">\r\n        <div class=\"flex-row-5\">\r\n          <img\r\n            class=\"mystery-music-logo3-1\"\r\n            src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/608797e5c0ff3678276ff026/img/mysterymusic-logo3-1@2x.png\"\r\n          />\r\n          <div class=\"overlap-group\">\r\n            <h1 class=\"text-1\">Guess Whose Playlist?</h1>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-row-4\">\r\n          <div class=\"overlap-group1\">\r\n            <img\r\n              class=\"vector-197\"\r\n              src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/vector-197@2x.svg\"\r\n            />\r\n          </div>\r\n          <div class=\"flex-col\">\r\n            <div class=\"album-cover\"></div>\r\n            <div class=\"play-bar\">\r\n              <div class=\"overlap-group3-1\">\r\n                <div class=\"rectangle\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"overlap-group2\">\r\n            <div class=\"leaderboard-example\">\r\n              <div class=\"overlap-group3\">\r\n                <div class=\"name-1 karla-normal-black-24px\">Linda</div>\r\n                <img\r\n                  class=\"star-1\"\r\n                  src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/star-1@2x.svg\"\r\n                />\r\n                <div class=\"number-1 karla-bold-black-24px\">6</div>\r\n              </div>\r\n              <div class=\"flex-row\">\r\n                <div class=\"name-2 karla-normal-black-24px\">Lindsay</div>\r\n                <div class=\"number-2 karla-bold-black-24px\">5</div>\r\n              </div>\r\n              <div class=\"flex-row-1\">\r\n                <div class=\"egret karla-normal-black-24px\">Egret</div>\r\n                <div class=\"number karla-bold-black-24px\">3</div>\r\n              </div>\r\n              <div class=\"flex-row-2\">\r\n                <div class=\"name karla-normal-black-24px\">David</div>\r\n                <div class=\"number-3 karla-bold-black-24px\">1</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"board\">\r\n          <Board\r\n              squares={this.state.squares}\r\n              size={this.props.size}\r\n              onClick={index => this.onMakeMove(index)}\r\n            />   \r\n            <div id=\"countdown\"></div>      \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n \r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}