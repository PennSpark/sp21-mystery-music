{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egg\\\\Desktop\\\\UPenn\\\\sem 4\\\\pcl\\\\mystery music\\\\my-app\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Swal from \"sweetalert2\";\nimport './Game.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst option_letters = ['A', 'B', 'C', 'D'];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.newRound = () => {\n      var squares = this.state.squares;\n      this.setState({\n        round: this.state.round + 1\n      });\n      console.log(\"round\" + this.state.round); // use nextTurn to get new answer from db when set up\n      // this.nextTurn();\n\n      this.answer = this.state.round;\n      console.log(\"new answer: \" + this.answer);\n      this.setState({\n        // update squares\n        squares: squares\n      }); // TODO:\n      // update scoreboard\n      // update current song\n\n      this.timer();\n    };\n\n    this.timer = () => {\n      var timeleft = 10;\n      var timer = setInterval(() => {\n        if (timeleft <= 0) {\n          clearInterval(timer); //document.getElementById(\"countdown\").innerHTML = \"Finished\";\n          //document.getElementById(\"status\").innerHTML = 'Round:' + x;\n\n          console.log(\"timer finish!\");\n\n          if (this.state.round < 4) {\n            this.newRound();\n          } else {\n            this.checkForWinner();\n          }\n        } else {\n          console.log(timeleft); //document.getElementById(\"countdown\").innerHTML = timeleft + \" seconds remaining\";\n        }\n\n        timeleft -= 1;\n      }, 1000);\n    };\n\n    this.updateScore = winner => {\n      const updateScoreThing = {\n        joinCode: this.roomId,\n        playerId: winner,\n        score: this.score\n      };\n      axios.post('http://localhost:5001/games/updateScore', updateScoreThing).then(res => console.log(res.data)); // End the game once there is a winner\n      // this.gameOver = true;\n      // this.newRound(winner);\t\n    };\n\n    this.checkForWinner = () => {\n      // All rounds have been completed\n      if (this.state.round === 4) {\n        this.gameOver = true;\n\n        if (this.props.isRoomCreator) {\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Game Over',\n            text: 'Want to play again?',\n            showCancelButton: true,\n            confirmButtonColor: 'rgb(208,33,41)',\n            cancelButtonColor: '#aaa',\n            cancelButtonText: 'Nope',\n            confirmButtonText: 'Yea!',\n            width: 275\n          }).then(result => {\n            // Start a new round\n            if (result.value) {\n              this.props.pubnub.publish({\n                message: {\n                  reset: true\n                },\n                channel: this.props.gameChannel\n              });\n            } else {\n              // End the game\n              this.props.pubnub.publish({\n                message: {\n                  endGame: true\n                },\n                channel: this.props.gameChannel\n              });\n            }\n          });\n        } else {\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Game Over',\n            text: 'Waiting for a new round...',\n            confirmButtonColor: 'rgb(208,33,41)',\n            width: 275\n          });\n        }\n      }\n    };\n\n    this.publishMove = index => {\n      var squares = this.state.squares;\n      this.setState({\n        // update scores\n        squares: squares\n      });\n\n      if (index === this.answer) {\n        this.scores[index] += 1;\n      }\n\n      this.checkForWinner();\n    };\n\n    this.onMakeMove = index => {\n      var squares = this.state.squares;\n      console.log(index);\n\n      if (index == this.answer) {\n        console.log(\"correct!\"); // Update chosen button to show that it's been clicked\n\n        squares[index] = 'X';\n        this.score += 1;\n        this.setState({\n          squares: squares\n        }); // Publish move to the channel\n        // this.props.pubnub.publish({\n        //   message: {\n        //     player: index,\n        //    \n        //   },\n        //   channel: this.props.gameChannel\n        // });  \n        // Check if there is a winner\n\n        this.checkForWinner();\n      }\n    };\n\n    this.setState({\n      countdown: 10\n    });\n    this.player = this.props.player;\n    this.roomId = this.props.roomId;\n    this.databaseGameId = this.props.databaseGameId;\n    this.score = 0;\n    this.gameOver = false;\n    this.counter = 0;\n    this.answer = 0;\n    this.state = {\n      // squares contains the player names in the game !\n      // use fillArray to get list of players from db\n      // displayed by Board.js\n      squares: option_letters,\n      size: 0,\n      round: 0,\n      scores: Array(this.state.size)\n    };\n    console.log(\"size: \" + this.state.size);\n    console.log(\"player: \" + this.player);\n  } // function for each new round\n\n\n  fillArray(size) {\n    var array = Array(size).fill();\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId).then(response => {\n      for (var i = 0; i < response.data.size; i++) {\n        console.log(response.data.players[i].playerName);\n        array[i] = response.data.players[i].playerName;\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    return array;\n  } // gets next player song pair to guess\n\n\n  nextTurn() {\n    axios.get('http://localhost:5001/games/getRandomPair/' + this.databaseGameId).then(response => {\n      //player id of song\n      this.answer = response.data[0].playerId;\n      console.log(this.answer); //player name of song if needed\n\n      console.log(response.data[0].playerName); //name of song if needed\n\n      console.log(response.data[0].songName);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    // this.timer();\n    var squares = Array(this.state.size).fill(\"loading names\"); //gets size(num of players in game) and updates squares\n\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId).then(response => {\n      console.log(\"hi there\");\n      console.log(response);\n      console.log(this.fillArray(response.data.size));\n\n      for (var i = 0; i < response.data.size; i++) {\n        console.log(response.data.players[i].playerName);\n        squares[i] = response.data.players[i].playerName;\n      } // var squares = this.fillArray(response.data.size);\n\n\n      this.setState({\n        size: response.data.size,\n        squares: squares\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    this.props.pubnub.getMessage(this.props.gameChannel, msg => {\n      // edit publish move to publish scoreboard instead?\n      // Publish move to the opponent's board    \n      this.publishMove(msg.message.index, msg.message.piece); // Start a new game\n\n      if (msg.message.reset) {\n        this.setState({\n          // update players\n          squares: this.fillArray(4),\n          round: 0\n        });\n        this.score = 0;\n        this.gameOver = false;\n        this.counter = 0;\n        this.answer = 0;\n        Swal.close();\n      } // End the game and go back to the lobby\n      else if (msg.message.endGame) {\n          Swal.close();\n          this.props.endGame();\n        }\n    });\n  } // Update db score if answer is correct\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-center-horizontal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"game-screen-1 screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex-row-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"mystery-music-logo3-1\",\n              src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/608797e5c0ff3678276ff026/img/mysterymusic-logo3-1@2x.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                class: \"text-1\",\n                children: \"Guess Whose Playlist?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 13\n              }, this), \"Round: \", this.state.round]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flex-row-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group1\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"vector-197\",\n                src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/vector-197@2x.svg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"album-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"play-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"overlap-group3-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"rectangle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlap-group2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"leaderboard-example\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"overlap-group3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name-1 karla-normal-black-24px\",\n                    children: this.state.squares[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    class: \"star-1\",\n                    src: \"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/star-1@2x.svg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-1 karla-bold-black-24px\",\n                    children: \"6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name-2 karla-normal-black-24px\",\n                    children: this.state.squares[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-2 karla-bold-black-24px\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"egret karla-normal-black-24px\",\n                    children: this.state.squares[2]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number karla-bold-black-24px\",\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"flex-row-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"name karla-normal-black-24px\",\n                    children: this.state.squares[3]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"number-3 karla-bold-black-24px\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            value: \"Start Game\",\n            onClick: () => this.timer(),\n            children: \"start timer  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board\",\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              squares: this.state.squares,\n              size: this.props.size,\n              onClick: index => this.onMakeMove(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"countdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/egg/Desktop/UPenn/sem 4/pcl/mystery music/my-app/src/Game.js"],"names":["React","Board","Swal","axios","option_letters","Game","Component","constructor","props","newRound","squares","state","setState","round","console","log","answer","timer","timeleft","setInterval","clearInterval","checkForWinner","updateScore","winner","updateScoreThing","joinCode","roomId","playerId","score","post","then","res","data","gameOver","isRoomCreator","fire","position","allowOutsideClick","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","width","result","value","pubnub","publish","message","reset","channel","gameChannel","endGame","publishMove","index","scores","onMakeMove","countdown","player","databaseGameId","counter","size","Array","fillArray","array","fill","get","response","i","players","playerName","catch","error","nextTurn","songName","componentDidMount","getMessage","msg","piece","close","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Swal from \"sweetalert2\";  \r\nimport './Game.css';\r\nimport axios from 'axios';\r\n\r\nconst option_letters = ['A', 'B', 'C', 'D'];\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setState({\r\n      countdown: 10,\r\n    });\r\n\r\n    this.player = this.props.player;\r\n    this.roomId = this.props.roomId;\r\n    this.databaseGameId = this.props.databaseGameId;\r\n    this.score = 0;\r\n    this.gameOver = false;\r\n    this.counter = 0;\r\n    this.answer = 0;\r\n\r\n    this.state = {\r\n      // squares contains the player names in the game !\r\n      // use fillArray to get list of players from db\r\n      // displayed by Board.js\r\n      squares: option_letters, \r\n      size : 0,\r\n      round : 0,\r\n      scores: Array(this.state.size)\r\n    };\r\n\r\n    console.log(\"size: \" + this.state.size);\r\n    console.log(\"player: \" + this.player);\r\n  }\r\n\r\n  // function for each new round\r\n  newRound = () => {\r\n    var squares = this.state.squares;\r\n\r\n    this.setState({\r\n      round : this.state.round + 1\r\n    })\r\n\r\n    console.log(\"round\" + this.state.round);\r\n    // use nextTurn to get new answer from db when set up\r\n    // this.nextTurn();\r\n    this.answer = this.state.round;\r\n    console.log(\"new answer: \" + this.answer);\r\n\r\n    this.setState({\r\n      // update squares\r\n      squares: squares\r\n    });\r\n\r\n    // TODO:\r\n    // update scoreboard\r\n    // update current song\r\n\r\n    this.timer();\r\n  }\r\n\r\n  timer = () => {\r\n    var timeleft = 10;\r\n    var timer = setInterval(() => {\r\n      if (timeleft <= 0) {\r\n        clearInterval(timer);\r\n        //document.getElementById(\"countdown\").innerHTML = \"Finished\";\r\n        //document.getElementById(\"status\").innerHTML = 'Round:' + x;\r\n        console.log(\"timer finish!\");\r\n        if (this.state.round < 4) {\r\n        this.newRound();\r\n      } else {\r\n        this.checkForWinner();\r\n      }\r\n      } else {\r\n        console.log(timeleft);\r\n        //document.getElementById(\"countdown\").innerHTML = timeleft + \" seconds remaining\";\r\n      }\r\n      timeleft -= 1;\r\n    }, 1000);\r\n  }\r\n\r\n  fillArray(size) {\r\n    var array = Array(size).fill();\r\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId)\r\n    .then(response => {\r\n      for (var i = 0; i < response.data.size; i++){\r\n        console.log(response.data.players[i].playerName);\r\n        array[i] = response.data.players[i].playerName;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    return array;\r\n  }\r\n  \r\n  // gets next player song pair to guess\r\n  nextTurn() {\r\n    axios.get('http://localhost:5001/games/getRandomPair/' + this.databaseGameId)\r\n    .then(response => {\r\n      //player id of song\r\n      this.answer = response.data[0].playerId;\r\n      console.log(this.answer);\r\n      //player name of song if needed\r\n      console.log(response.data[0].playerName);\r\n      //name of song if needed\r\n      console.log(response.data[0].songName);\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.timer();\r\n    var squares = Array(this.state.size).fill(\"loading names\");\r\n\r\n    //gets size(num of players in game) and updates squares\r\n    axios.get('http://localhost:5001/games/getGame/' + this.databaseGameId)\r\n    .then(response => {\r\n      console.log(\"hi there\");\r\n      console.log(response);\r\n      console.log(this.fillArray(response.data.size));\r\n      for (var i = 0; i < response.data.size; i++){\r\n        console.log(response.data.players[i].playerName);\r\n        squares[i] = response.data.players[i].playerName;\r\n      }\r\n      // var squares = this.fillArray(response.data.size);\r\n        this.setState({\r\n          size : response.data.size,\r\n          squares: squares\r\n        });\r\n     \r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\r\n\r\n      // edit publish move to publish scoreboard instead?\r\n      // Publish move to the opponent's board    \r\n      this.publishMove(msg.message.index, msg.message.piece);\r\n\r\n      // Start a new game\r\n      if(msg.message.reset){\r\n        this.setState({\r\n          // update players\r\n          squares: this.fillArray(4),\r\n          round: 0\r\n        });\r\n\r\n        this.score = 0;\r\n        this.gameOver = false;\r\n        this.counter = 0;\r\n        this.answer = 0;\r\n        Swal.close()\r\n      }\r\n\r\n      // End the game and go back to the lobby\r\n      else if(msg.message.endGame){\r\n        Swal.close();\r\n        this.props.endGame();\r\n      }\r\n    });\r\n  }\r\n\r\n\t// Update db score if answer is correct\r\n  updateScore = (winner) => {\r\n\r\n    const updateScoreThing = {\r\n      joinCode: this.roomId,\r\n      playerId: winner,\r\n      score: this.score\r\n    };\r\n    axios.post('http://localhost:5001/games/updateScore', updateScoreThing)\r\n      .then(res => console.log(res.data));\r\n      \r\n\r\n\t\t// End the game once there is a winner\r\n\t\t// this.gameOver = true;\r\n\t\t// this.newRound(winner);\t\r\n  }\r\n  \r\n  checkForWinner = () => {\r\n\r\n    // All rounds have been completed\r\n    if (this.state.round === 4) {\r\n      this.gameOver = true;\r\n      if(this.props.isRoomCreator) {\r\n        Swal.fire({      \r\n              position: 'top',\r\n              allowOutsideClick: false,\r\n              title: 'Game Over',\r\n              text: 'Want to play again?',\r\n              showCancelButton: true,\r\n              confirmButtonColor: 'rgb(208,33,41)',\r\n              cancelButtonColor: '#aaa',\r\n              cancelButtonText: 'Nope',\r\n              confirmButtonText: 'Yea!',\r\n              width: 275,\r\n            }).then((result) => {\r\n              // Start a new round\r\n              if (result.value) {\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    reset: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n      \r\n              else{\r\n                // End the game\r\n                this.props.pubnub.publish({\r\n                  message: {\r\n                    endGame: true\r\n                  },\r\n                  channel: this.props.gameChannel\r\n                });\r\n              }\r\n            })      \r\n          \r\n      } else {\r\n      Swal.fire({  \r\n            position: 'top',\r\n            allowOutsideClick: false,\r\n            title: 'Game Over',\r\n            text: 'Waiting for a new round...',\r\n            confirmButtonColor: 'rgb(208,33,41)',\r\n            width: 275\r\n          });\r\n        }\r\n    }\r\n  };\r\n   \r\n  // Publishing an opponent's move onto the board\r\n  // not even necessary ):\r\n  // except maybe !!! for publishing scores ig\r\n  publishMove = (index) => {\r\n    var squares = this.state.squares;\r\n\r\n    this.setState({\r\n      // update scores\r\n      squares: squares,\r\n    });\r\n    \r\n    if (index === this.answer) {\r\n      this.scores[index] += 1;\r\n    }\r\n\r\n    this.checkForWinner()\r\n  }\r\n\r\n  // Making a move on the board and publishing it\r\n  onMakeMove = (index) => {\r\n    var squares = this.state.squares;\r\n\r\n    console.log(index);\r\n\r\n    if (index == this.answer) { \r\n      console.log(\"correct!\");\r\n      // Update chosen button to show that it's been clicked\r\n      squares[index] = 'X';\r\n\r\n      this.score += 1;\r\n\r\n       this.setState({\r\n         squares: squares,\r\n       });\r\n\r\n      // Publish move to the channel\r\n      // this.props.pubnub.publish({\r\n      //   message: {\r\n      //     player: index,\r\n      //    \r\n      //   },\r\n      //   channel: this.props.gameChannel\r\n      // });  \r\n\r\n      // Check if there is a winner\r\n      this.checkForWinner();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"game\">\r\n         {/* You are player {this.player}\r\n        <div className=\"prompt\">\r\n          Guess who! {this.answer}\r\n        </div>\r\n        <br></br> */}\r\n        \r\n        {/* <div className=\"scores-container\">\r\n          <div>\r\n            SCORES {this.scores}\r\n          </div>\r\n        </div>   \r\n      </div> */}\r\n      \r\n      <div class=\"container-center-horizontal\">\r\n      <div class=\"game-screen-1 screen\">\r\n        <div class=\"flex-row-5\">\r\n          <img\r\n            class=\"mystery-music-logo3-1\"\r\n            src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/608797e5c0ff3678276ff026/img/mysterymusic-logo3-1@2x.png\"\r\n          />\r\n          <div class=\"overlap-group\">\r\n            <h1 class=\"text-1\">Guess Whose Playlist?</h1>\r\n            Round: {this.state.round}\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-row-4\">\r\n          <div class=\"overlap-group1\">\r\n            <img\r\n              class=\"vector-197\"\r\n              src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/vector-197@2x.svg\"\r\n            />\r\n          </div>\r\n          <div class=\"flex-col\">\r\n            <div class=\"album-cover\"></div>\r\n            <div class=\"play-bar\">\r\n              <div class=\"overlap-group3-1\">\r\n                <div class=\"rectangle\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"overlap-group2\">\r\n            {/* scoreboard update */}\r\n            <div class=\"leaderboard-example\">\r\n              <div class=\"overlap-group3\">\r\n                <div class=\"name-1 karla-normal-black-24px\">{this.state.squares[0]}</div>\r\n                <img\r\n                  class=\"star-1\"\r\n                  src=\"https://anima-uploads.s3.amazonaws.com/projects/60760a93d4d62b3f8b0aea2b/releases/6078ee0985f5e7f39b088386/img/star-1@2x.svg\"\r\n                />\r\n                <div class=\"number-1 karla-bold-black-24px\">6</div>\r\n              </div>\r\n              <div class=\"flex-row\">\r\n                <div class=\"name-2 karla-normal-black-24px\">{this.state.squares[1]}</div>\r\n                <div class=\"number-2 karla-bold-black-24px\">5</div>\r\n              </div>\r\n              <div class=\"flex-row-1\">\r\n                <div class=\"egret karla-normal-black-24px\">{this.state.squares[2]}</div>\r\n                <div class=\"number karla-bold-black-24px\">3</div>\r\n              </div>\r\n              <div class=\"flex-row-2\">\r\n                <div class=\"name karla-normal-black-24px\">{this.state.squares[3]}</div>\r\n                <div class=\"number-3 karla-bold-black-24px\">1</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <button type=\"button\" value=\"Start Game\" onClick={() => this.timer()} >start timer  </button>\r\n        <div className=\"board\">\r\n          <Board\r\n              squares={this.state.squares}\r\n              size={this.props.size}\r\n              onClick={index => this.onMakeMove(index)}\r\n            />   \r\n            <div id=\"countdown\"></div>      \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n \r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}